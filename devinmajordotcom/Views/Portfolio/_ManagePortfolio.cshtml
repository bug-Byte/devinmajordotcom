@model devinmajordotcom.ViewModels.PortfolioViewModel
@{ 
    var contactLinkCount = 0;
}

@using (Ajax.BeginForm("_ManagePortfolio", "Portfolio", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "AjaxSuccess(data)", OnFailure = "AjaxFailure(data)" }, new { @id = "updatePortfolioForm" }))
{
    <div class="panel-group">
        <div class="panel panel-default" style="margin-bottom: 1vh; -webkit-box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);
        -moz-box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);
        box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);">
            <div class="panel-heading portfolioPanelHeading" data-toggle="collapse" href="#collapse1">
                <span class="glyphicon glyphicon-collapse-up glyphicon-collapse-down"></span>
                &nbsp;&nbsp;
                <h4 class="panel-title" style="display: inline;">
                    <a>Splash Screen</a>
                </h4>
            </div>
            <div id="collapse1" class="panel-collapse collapse in">
                <div class="panel-body">

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="row">
                                <div class="col-sm-6">
                                    @Html.LabelFor(x => x.SplashScreenDetails.FirstName)
                                </div>
                                <div class="col-sm-6">
                                    @Html.TextBoxFor(x => x.SplashScreenDetails.FirstName, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    @Html.ValidationMessageFor(x => x.SplashScreenDetails.FirstName)
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="row">
                                <div class="col-sm-6">
                                    @Html.LabelFor(x => x.SplashScreenDetails.LastName)
                                </div>
                                <div class="col-sm-6">
                                    @Html.TextBoxFor(x => x.SplashScreenDetails.LastName, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    @Html.ValidationMessageFor(x => x.SplashScreenDetails.LastName)
                                </div>
                            </div>
                        </div>
                    </div>                    

                    <br />

                    <div class="row">
                        <div class="col-sm-12 text-center">
                            @Html.LabelFor(x => x.SplashScreenDetails.PositionTitle)
                        </div>
                        <div class="col-sm-12">
                            @Html.TextBoxFor(x => x.SplashScreenDetails.PositionTitle, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            @Html.ValidationMessageFor(x => x.SplashScreenDetails.PositionTitle)
                        </div>
                    </div>

                    <br />

                    <div class="row">
                        <div class="col-sm-12 text-center">
                            @Html.LabelFor(x => x.SplashScreenDetails.PersonalDescription)
                        </div>
                        <div class="col-sm-12">
                            @Html.TextAreaFor(x => x.SplashScreenDetails.PersonalDescription, new { @class = "tinymce", @rows = "4", @placeholder = "I am a professional architect, and have designed many buildings all over Eastern Canada." })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            @Html.ValidationMessageFor(x => x.SplashScreenDetails.PersonalDescription)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-default" style="margin-bottom: 1vh; -webkit-box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);
        -moz-box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);
        box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);">
            <div class="panel-heading portfolioPanelHeading" data-toggle="collapse" href="#collapse2">
                <span class="glyphicon glyphicon-collapse-up glyphicon-collapse-down"></span>
                &nbsp;&nbsp;
                <h4 class="panel-title" style="display: inline;">
                    <a>Personal Profile</a>
                </h4>
            </div>
            <div id="collapse2" class="panel-collapse collapse">
                <div class="panel-body">

                    <h5>General Details</h5>

                    <div class="row">
                        <div class="col-sm-6">
                            @Html.LabelFor(x => x.ProfileDetails.DateOfBirth)
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <div class='input-group date' id='date'>
                                    @Html.TextBoxFor(x => x.ProfileDetails.DateOfBirth, new { @class = "form-control" })
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                            
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            @Html.ValidationMessageFor(x => x.ProfileDetails.DateOfBirth)
                        </div>
                    </div>

                    <br />

                    <div class="row">
                        <div class="col-sm-6">
                            @Html.LabelFor(x => x.ProfileDetails.Address)
                        </div>
                        <div class="col-sm-6">
                            @Html.TextBoxFor(x => x.ProfileDetails.Address, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            @Html.ValidationMessageFor(x => x.ProfileDetails.Address)
                        </div>
                    </div>

                    <br />

                    <div class="row">
                        <div class="col-sm-6">
                            @Html.LabelFor(x => x.ProfileDetails.PhoneNumber)
                        </div>
                        <div class="col-sm-6">
                            @Html.TextBoxFor(x => x.ProfileDetails.PhoneNumber, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            @Html.ValidationMessageFor(x => x.ProfileDetails.PhoneNumber)
                        </div>
                    </div>

                    <br />

                    <div class="row">
                        <div class="col-sm-6">
                            @Html.LabelFor(x => x.ProfileDetails.Email)
                        </div>
                        <div class="col-sm-6">
                            @Html.TextBoxFor(x => x.ProfileDetails.Email, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            @Html.ValidationMessageFor(x => x.ProfileDetails.Email)
                        </div>
                    </div>

                    <br />

                    <div class="row">
                        <div class="col-sm-6">
                            @Html.LabelFor(x => x.ProfileDetails.WebsiteText)
                        </div>
                        <div class="col-sm-6">
                            @Html.TextBoxFor(x => x.ProfileDetails.WebsiteText, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            @Html.ValidationMessageFor(x => x.ProfileDetails.WebsiteText)
                        </div>
                    </div>

                    <br />

                    <div class="row">
                        <div class="col-sm-6">
                            @Html.LabelFor(x => x.ProfileDetails.WebsiteURL)
                        </div>
                        <div class="col-sm-6">
                            @Html.TextBoxFor(x => x.ProfileDetails.WebsiteURL, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            @Html.ValidationMessageFor(x => x.ProfileDetails.WebsiteURL)
                        </div>
                    </div>

                    <br />

                    <h5>Describe Yourself</h5>

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="row">
                                <div class="col-sm-12 text-center">
                                    @Html.LabelFor(x => x.PersonalDescription.Adjective1)
                                </div>
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(x => x.PersonalDescription.Adjective1, new { @class = "form-control" })
                                </div>
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(x => x.PersonalDescription.Adjective2, new { @class = "form-control" })
                                </div>
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(x => x.PersonalDescription.Adjective3, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="row">
                                <div class="col-sm-12 text-center">
                                    @Html.LabelFor(x => x.PersonalDescription.Blurb)
                                </div>
                                <div class="col-sm-12">
                                    @Html.TextAreaFor(x => x.PersonalDescription.Blurb, new { @class = "tinymce", @rows = "4", @placeholder = "Skill Description (Ex: I am also 21 years old, I am into running and bike riding, and love long walks on the beach!)" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    @Html.ValidationMessageFor(x => x.PersonalDescription.Blurb)
                                </div>
                            </div>
                        </div>
                    </div>

                    <br />

                </div>
            </div>
        </div>
        <div class="panel panel-default" style="margin-bottom: 1vh; -webkit-box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);
        -moz-box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);
        box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);">
            <div class="panel-heading portfolioPanelHeading" data-toggle="collapse" href="#collapse3">
                <span class="glyphicon glyphicon-collapse-up glyphicon-collapse-down"></span>
                &nbsp;&nbsp;
                <h4 class="panel-title" style="display: inline;">
                    <a>Skills</a>
                </h4>
            </div>
            <div id="collapse3" class="panel-collapse collapse">
                <div class="panel-body">

                    <div class="row">
                        <div class="col-sm-12 text-center">
                            <h3>Highlighted Skills</h3>
                        </div>
                    </div>

                    <div id="skillCarousel" class="carousel slide">
                        <!-- Indicators -->
                        <ol class="carousel-indicators" style="bottom: -10px;">
                            @{
                                var counter = 0;
                                if (Model.HighlightedWorkSkills != null)
                                {
                                    foreach (var workItem in Model.HighlightedWorkSkills)
                                    {
                                        var className = "";
                                        if(counter == 0)
                                        {
                                            className = "active";
                                        }
                                        <li data-target="#myCarousel" data-slide-to="@counter" class="@className"></li>
                                        counter++;
                                    }
                                }
                            }
                        </ol>

                        <!-- Wrapper for slides -->
                        <div class="carousel-inner" style="width: 80%;left: 10%;">
                            @{

                                var count = 1;
                                if (Model.HighlightedWorkSkills != null)
                                {
                                    foreach (var workItem in Model.HighlightedWorkSkills)
                                    {
                                        var active = "";
                                        if (count == 1)
                                        {
                                            active = "active";
                                        }
                                        <div class="item @active">
                                                    <div class="specialWork-wrapper" style="margin-bottom:-21px;">
                                                        @*<i class="@workItem.SkillIcon"></i>*@
                                                        <button data-placement="left"
                                                                class="btn btn-default iconpicker"
                                                                name="@Html.NameFor(x => x.HighlightedWorkSkills[count - 1].SkillIcon)"
                                                                role="iconpicker"
                                                                data-iconset="fontawesome"
                                                                data-icon="@Model.HighlightedWorkSkills[count - 1].SkillIcon"
                                                                type="button"
                                                                style="font-size: 50px; margin-bottom: 1vh;"></button>
                                                        @Html.TextBoxFor(x => x.HighlightedWorkSkills[count - 1].SkillTitle, new { @class = "form-control text-center text-uppercase tm-work-h3", @style="color:white !important;", @placeholder = "Skill Title (Ex: Paleontology)" })
                                                        <hr>
                                                        @Html.TextAreaFor(x => x.HighlightedWorkSkills[count - 1].SkillDetails, new { @class = "tinymce", @rows = "4", @placeholder = "Skill Description (Ex: I dig up bones and recreate skeletons of ancient, extinct animal species)" })
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <br />
                                                            @Html.ValidationMessageFor(x => x.HighlightedWorkSkills[count - 1].SkillIcon)
                                                            @Html.ValidationMessageFor(x => x.HighlightedWorkSkills[count - 1].SkillTitle)
                                                            @Html.ValidationMessageFor(x => x.HighlightedWorkSkills[count - 1].SkillDetails)
                                                        </div>
                                                    </div>
                                        </div>
                                        count = count + 1;
                                    }
                                }

                            }
                        </div>

                        <!-- Left and right controls -->
                        <a class="left carousel-control" href="#skillCarousel" data-slide="prev">
                            <span class="glyphicon glyphicon-chevron-left"></span>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="right carousel-control" href="#skillCarousel" data-slide="next">
                            <span class="glyphicon glyphicon-chevron-right"></span>
                            <span class="sr-only">Next</span>
                        </a>
                    </div>

                    <br />
                
                    <div class="row">
                        <div class="col-sm-12 text-center">
                            <h3>Technical Skills</h3>
                        </div>
                    </div>

                    <div id="techSkillContainer">
                        @if (Model.TechSkills != null && Model.TechSkills.Count > 0)
                        {
                            for (var i = 0; i < Model.TechSkills.Count; i++)
                            {
                                @Html.HiddenFor(x => x.TechSkills[i].TechSkillID, new { @class = "tech hiddenSkillId", data_skillid = Model.TechSkills[i].TechSkillID })
                                <div class="techSkill techSkill_@i">
                                    <div class="row">
                                        <div class="col-sm-11 text-left">
                                            @Html.TextAreaFor(x => x.TechSkills[i].SkillDescription, new { @class = "form-control techskill" })
                                        </div>
                                        <div class="col-sm-1 text-right">
                                            @{
                                                var linkText = "<span class='fa fa-trash'></span>";
                                                var actionLink = Ajax.ActionLink("REPLACE", "RemoveTechSkill", "Portfolio", new { ID = Model.TechSkills[i].TechSkillID }, new AjaxOptions() { HttpMethod = "GET", OnSuccess = "RemoveSkill('.techSkill_" + i + "', 'techSkill')", OnFailure = "ManagePortfolioSkillsAjaxFailure" }, new { data_content = linkText, @id = "deleteLangugeSkillLink_" + Model.TechSkills[i].TechSkillID, @class = "btn btn-danger deleteSkillGroup deleteSkillLink", @style = "float:right;" });
                                                @Html.Raw(actionLink.ToHtmlString().Replace("REPLACE", linkText))
                                            }
                                        </div>
                                    </div>
                                    <hr />
                                </div>
                            }
                        }
                    </div>
                    <div class="row">
                        <div class="col-sm-12 text-center">
                            <button type="button" id="addNewTechSkillLink" class="btn btn-success" style="border-color: #00bc8c !important; background-color: #00bc8c !important;"><span class="glyphicon glyphicon-plus"></span>&nbsp;Add New Technical Skill</button>
                        </div>
                    </div>

                    <br/>

                    <div class="row">
                        <div class="col-sm-12 text-center">
                            <h3>Language Skills</h3>
                        </div>
                    </div>

                    <div id="languageSkillContainer">
                        @if (Model.LanguageSkills != null && Model.LanguageSkills.Count > 0)
                        {
                            for (var i = 0; i < Model.LanguageSkills.Count; i++)
                            {
                                @Html.HiddenFor(x => x.LanguageSkills[i].LanguageSkillID, new { @class = "language hiddenSkillId", data_skillid = Model.LanguageSkills[i].LanguageSkillID })
                                <div class="languageSkill languageSkill_@i">
                                    <div class="well well-sm text-left">
                                        <h5>Language Name</h5>
                                        @Html.TextBoxFor(x => x.LanguageSkills[i].LanguageName, new { @class = "form-control" })
                                        <h5>Language Specifics (if programming language or applicable)</h5>
                                        @Html.TextAreaFor(x => x.LanguageSkills[i].LanguageSpecifics, new { @class = "form-control" })
                                        @{
                                            var linkText = "<span class='fa fa-trash'></span>&nbsp;Remove Language";
                                            var actionLink = Ajax.ActionLink("REPLACE", "RemoveLanguageSkill", "Portfolio", new { ID = Model.LanguageSkills[i].LanguageSkillID }, new AjaxOptions() { HttpMethod = "GET", OnSuccess = "RemoveSkill('.languageSkill_" + i + "', 'languageSkill')", OnFailure = "ManagePortfolioSkillsAjaxFailure" }, new { data_content = linkText, @id = "deleteLangugeSkillLink_" + Model.LanguageSkills[i].LanguageSkillID, @class = "btn btn-danger deleteSkillGroup deleteSkillLink", @style = "float:right;" });
                                            @Html.Raw(actionLink.ToHtmlString().Replace("REPLACE", linkText))
                                        }
                                        <br/>
                                    </div>
                                    <hr />
                                </div>
                            }
                        }
                    </div>
                    <div class="row">
                        <div class="col-sm-12 text-center">
                            <button type="button" id="addNewLanguageSkillLink" class="btn btn-success" style="border-color: #00bc8c !important; background-color: #00bc8c !important;"><span class="glyphicon glyphicon-plus"></span>&nbsp;Add New Language</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="panel panel-default" style="margin-bottom: 1vh; -webkit-box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);
        -moz-box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);
        box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);">
            <div class="panel-heading portfolioPanelHeading" data-toggle="collapse" href="#collapse4">
                <span class="glyphicon glyphicon-collapse-up glyphicon-collapse-down"></span>
                &nbsp;&nbsp;
                <h4 class="panel-title" style="display: inline;">
                    <a>Projects</a>
                </h4>
            </div>
            <div id="collapse4" class="panel-collapse collapse">
                <div class="panel-body">
                </div>
            </div>
        </div>
        <div class="panel panel-default" style="margin-bottom: 1vh; -webkit-box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);
        -moz-box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);
        box-shadow: 2.5px 2.5px 5px 2.5px rgba(245,245,245,1);">
            <div class="panel-heading portfolioPanelHeading" data-toggle="collapse" href="#collapse5">
                <span class="glyphicon glyphicon-collapse-up glyphicon-collapse-down"></span>
                &nbsp;&nbsp;
                <h4 class="panel-title" style="display: inline;">
                    <a>Contact Links</a>
                </h4>
            </div>
            <div id="collapse5" class="panel-collapse collapse">
                <div class="panel-body">
                    <div class="linkContainer">
                            @foreach (var link in Model.ContactSiteLinks.OrderBy(x => x.Order))
                            {
                                @Html.HiddenFor(x => x.ContactSiteLinks[contactLinkCount].ID, new { @class = "hiddenID hiddenInput_" + Model.ContactSiteLinks[contactLinkCount].ID })
                                <div class="contactLink" data-hiddeninputid="@Html.IdFor(x => x.ContactSiteLinks[contactLinkCount].Order)" style="padding-top: 10px; margin-bottom: 2vh;">
                                    @Html.HiddenFor(x => x.ContactSiteLinks[contactLinkCount].Order, new { @class = "hiddenOrder hiddenInput_" + Model.ContactSiteLinks[contactLinkCount].ID })

                                    @{
                                        var linkText = "<span class='fa fa-trash'></span>";
                                        var actionLink = Ajax.ActionLink("REPLACE", "RemoveContactLink", "Portfolio", new { ID = Model.ContactSiteLinks[contactLinkCount].ID }, new AjaxOptions() { HttpMethod = "GET", OnSuccess = "RemoveContactLink('#deleteLink_" + Model.ContactSiteLinks[contactLinkCount].ID + "')", OnFailure = "ManagePortfolioSkillsAjaxFailure" }, new { data_content = linkText, @id = "deleteLink_" + Model.ContactSiteLinks[contactLinkCount].ID, @class = "btn btn-danger deleteGroup deleteMediaLink", @style = "float:right;" });
                                    }

                                    <div class="row">
                                        
                                        <div class="col-sm-12 wow rotateInUpLeft" data-wow-delay="0.3s">
                                            
                                            <div class="media @Model.ContactSiteLinks[contactLinkCount].DisplayIcon.Replace("fa fa-","")">
                                                <div class="text-right">
                                                    @Html.Raw(actionLink.ToHtmlString().Replace("REPLACE", linkText))
                                                </div> 
                                                <div class="media-object pull-left">
                                                    <div class="col-sm-12 text-center">
                                                        <div style="margin-bottom: 8px" class="input-group">
                                                            <span class="input-group-btn">
                                                                <button data-placement="left"
                                                                        class="btn btn-default iconpicker"
                                                                        name="@Html.NameFor(x => x.ContactSiteLinks[contactLinkCount].DisplayIcon)"
                                                                        role="iconpicker"
                                                                        data-iconset="fontawesome"
                                                                        data-icon="@Model.ContactSiteLinks[contactLinkCount].DisplayIcon"
                                                                        type="button"></button>
                                                            </span>
                                                            @Html.TextBoxFor(x => x.ContactSiteLinks[contactLinkCount].Directive, new { @class = "form-control namer", style = "margin-bottom: 0px", placeholder = "Follow me on" })
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-12 text-center">
                                                        <div class="customColorPicker input-group colorpicker-component" data-color="@Model.ContactSiteLinks[contactLinkCount].Color">
                                                            @Html.TextBoxFor(x => x.ContactSiteLinks[contactLinkCount].Color, new { @class = "form-control", @placeholder = "Pick a color, any color!" })
                                                            <span class="input-group-addon"><i></i></span>
                                                        </div>
                                                    </div>
                                                    <div class="tcol-sm-12ext-center">
                                                        @Html.TextBoxFor(x => x.ContactSiteLinks[contactLinkCount].DisplayName, new { @class = "form-control namer", style = "margin-bottom: 0px", placeholder = "Facebook" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12 text-center">
                                            @Html.ValidationMessageFor(x => x.ContactSiteLinks[contactLinkCount].DisplayName)
                                        </div>
                                    </div>
                                </div>
                                contactLinkCount++;
                            }
                        
                        @*@foreach (var contactLink in Model.ContactSiteLinks.OrderBy(x => x.Order))
                        {
                            <div class="row">
                                <div class="col-sm-12 wow rotateInUpLeft" data-wow-delay="0.3s">
                                    <div class="media @contactLink.DisplayIcon.Replace("fa fa-","")">
                                        <a href="@contactLink.URL">
                                            <div class="media-object pull-left">
                                                <i class="@contactLink.DisplayIcon"></i>
                                            </div>
                                            <div class="media-body">
                                                <h4 class="media-heading tm-social-title">@contactLink.Directive</h4>
                                                <h3>@contactLink.DisplayName</h3>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }*@
                    </div>
                </div>
            </div>
        </div>
    </div>

    <br />

    <div class="row">
        <div class="col-sm-offset-2 col-sm-8">
            <input class="form-control btn btn-success" id="updatePortfolio" type="submit" value="Update Professional Portfolio">
        </div>
    </div>

    @Html.Partial("../Portfolio/_AddNewTechSkill")
    @Html.Partial("../Portfolio/_AddNewLanguageSkill")
}
