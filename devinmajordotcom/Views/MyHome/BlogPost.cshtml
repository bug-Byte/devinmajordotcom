@using devinmajordotcom.ViewModels
@model BlogPostViewModel
@{
    Layout = "../Shared/_BlogLayout.cshtml";
}

<div class="container">
    
    <div class="row">
        
        <div class="col-lg-12">
            <h1 class="mt-4 blogHoverItem">@Model.PostTitle</h1>
            <p class="lead">
                Authored by:
                <a href="#" class="blogHoverItem">@Model.AuthorUserName</a>
            </p>
            <hr />
            <p class="blogHoverItem"><i class="fa fa-clock-o"></i>&nbsp;&nbsp;Posted on @Model.CreatedOn</p>
            @if (Model.ModifiedOn != Model.CreatedOn)
            {
                <p class="blogHoverItem"><i class="fa fa-clock-o"></i>&nbsp;&nbsp;Last edited on @Model.ModifiedOn</p>
            }
            <hr />
        </div>

        <div class="col-lg-12">
            <div class="blog-image">
                <img src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(Model.BackgroundImage))" class="img-responsive img-fluid rounded" alt="Blog Post Image">
            </div>
        </div>

        <div class="col-lg-12">       
            <hr />    
            @Html.Raw(Model.Body)   
            <hr />         
        </div>

    </div>

    <div class="row">
        <div class="col-lg-12" id="commentsContainer">
            @foreach (var comment in Model.PostComments)
            {
                <div class="media mb-4 comment">
                    <div class="media-body">
                        <h5 class="mt-0 blogHoverItem">
                            <i class="fa fa-clock-o"></i>&nbsp;&nbsp;
                            @comment.CreatedOn
                        </h5>
                        <h5 class="mt-0 blogHoverItem">
                            <span class="glyphicon glyphicon-comment"></span>&nbsp;&nbsp;
                            @if (String.IsNullOrEmpty(comment.AuthorUserName))
                            {
                                <text>Anonymous said:</text>
                            }
                            else
                            {
                                <text>@comment.AuthorUserName said:</text>
                            }
                        </h5>
                        @Html.Raw(comment.Body)
                    </div>
                </div>
            }
        </div>
    </div>
    
    <br/>
    
    <div class="row">
        <div class="col-lg-12">
            @using (Ajax.BeginForm("AddComment", "MyHome", null, new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, OnSuccess = "UpdateComments(data);" }, new { @id = "EditBlogPostForm" }))
            {
                @Html.HiddenFor(x => x.NewComment.BlogPostID)
                @Html.HiddenFor(x => x.NewComment.AuthorUserID)
                <h4>Leave a Comment...</h4>
                @Html.TextAreaFor(x => x.NewComment.Body, new { @class = "tinymce", @rows = "5" })
                <br/>
                <button style="width: 100%" type="submit" class="btn btn-primary">Submit your Comment!</button>
            }
        </div>
    </div>
    
    <br/>

</div>

@section scripts {
    <script>
        RefreshTinyMce();
    </script>
}