@using devinmajordotcom.Helpers;
@model devinmajordotcom.ViewModels.MediaDashboardViewModel
@{
    Layout = "../Shared/_MediaLayout.cshtml";
}

<div class="wrapper">

    <nav id="sidebar" class="active">

        <!-- Sidebar Header -->
        <div class="sidebar-header">
            <h3>
                Collapsible Sidebar
                <button type="button" class="btn btn-info navbar-btn sidebarCollapse" style="display:inline;">
                    <span class="glyphicon glyphicon-fullscreen"></span>
                </button>
            </h3>
            <strong>
                <button type="button" class="btn btn-info navbar-btn sidebarCollapse" style="display:inline;">
                    <span class="glyphicon glyphicon-fullscreen"></span>
                </button>
            </strong>
        </div>

        <!-- Sidebar Links -->
        <ul class="list-unstyled components menu">

            @if (Model.SidebarLinks.Count > 0)
            {
                foreach (var sidebarLink in Model.SidebarLinks.Where(x => x.IsEnabled))
                {
                    <li @if(sidebarLink.IsDefault) {<text>class="active"</text>}>
                        <a href="#" data-framename="@sidebarLink.ID">
                            <i class="fa @sidebarLink.DisplayIcon"></i>
                            @sidebarLink.DisplayName
                        </a>
                    </li>
                }
            }
            @*<li class="active">
                <a href="#homeSubmenu" data-toggle="collapse" aria-expanded="false">
                    <i class="glyphicon glyphicon-home"></i>
                    Home
                </a>
            </li>
            <li>
                <a href="#">
                    <i class="glyphicon glyphicon-briefcase"></i>
                    About
                </a>
                <a href="#pageSubmenu" data-toggle="collapse" aria-expanded="false">
                    <i class="glyphicon glyphicon-duplicate"></i>
                    Pages
                </a>
                <ul class="collapse list-unstyled" id="pageSubmenu">
                    <li><a href="#">Page 1</a></li>
                    <li><a href="#">Page 2</a></li>
                    <li><a href="#">Page 3</a></li>
                </ul>
            </li>
            <li>
                <a href="#">
                    <i class="glyphicon glyphicon-link"></i>
                    Portfolio
                </a>
            </li>
            <li>
                <a href="#">
                    <i class="glyphicon glyphicon-send"></i>
                    Contact
                </a>
            </li>*@
        </ul>

    </nav>

    <div id="content">
        @if (Model.SidebarLinks.Count > 0)
        {
            var count = 0;
            foreach (var link in Model.SidebarLinks.Where(x => x.IsEnabled))
            {
                if (link.URL != null)
                {
                    <iframe src="@Model.SidebarLinks[count].URL"
                            style="width: 100%; height: 99.4vh; z-index: -1; border: none; @if(!Model.SidebarLinks[count].IsDefault) { <text>display:none;</text> }"
                            id="@Model.SidebarLinks[count].ID"
                            scrolling="auto"
                            sandbox="allow-forms allow-same-origin allow-pointer-lock allow-scripts allow-popups allow-modals"
                            allowfullscreen="true"
                            webkitallowfullscreen="true"
                            class="z-iframe"
                            frameborder="0"></iframe>
                }
                else
                {
                    //TODO: Add something here, preferably make use of Controller/Action variables
                }
                count++;
            }
        }
        else
        {
            @Html.Partial("../Shared/Error", new HandleErrorInfo(new Exception(), "MediaDashboard", "Index"))
        }

    </div>
</div>

@*<div id="nav">
    <ul class="menu toggled nav" id="menu">

        @if (Model.SidebarLinks.Count > 0)
        {
            foreach (var sidebarLink in Model.SidebarLinks.Where(x => x.IsEnabled))
            {

                var cssClassNameList = "";

                if(sidebarLink.IsDefault)
                {
                    cssClassNameList += "active ";
                }

                cssClassNameList += sidebarLink.DisplayIcon;

                <li title="@sidebarLink.DisplayName">
                    <span class="sidebarItem"><a data-framename="@sidebarLink.ID" href="#" class="@cssClassNameList">@sidebarLink.DisplayName</a></span>
                </li>
            }
        }

    </ul>
</div>*@