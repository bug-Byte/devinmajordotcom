

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "devinmajordotcom\Web.config"
//     Connection String Name: "MainDbConnection"
//     Connection String:      "Data Source=.\DEVINSSQLEXPRESS;Initial Catalog=MyDatabase;Integrated Security=True"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Express Edition (64-bit)
// Database Engine Edition: Express

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace devinmajordotcom.Models
{
    using System.Linq;

    #region Unit of work

    public partial interface IdbContext : System.IDisposable
    {
        System.Data.Entity.DbSet<ApplicationMaster> ApplicationMasters { get; set; } // ApplicationMaster
        System.Data.Entity.DbSet<Portfolio_HighlightedSkill> Portfolio_HighlightedSkills { get; set; } // HighlightedSkill
        System.Data.Entity.DbSet<Portfolio_LanguageSkill> Portfolio_LanguageSkills { get; set; } // LanguageSkill
        System.Data.Entity.DbSet<Portfolio_PersonalDescription> Portfolio_PersonalDescriptions { get; set; } // PersonalDescription
        System.Data.Entity.DbSet<Portfolio_Profile> Portfolio_Profiles { get; set; } // Profile
        System.Data.Entity.DbSet<Portfolio_Project> Portfolio_Projects { get; set; } // Project
        System.Data.Entity.DbSet<Portfolio_ProjectType> Portfolio_ProjectTypes { get; set; } // ProjectType
        System.Data.Entity.DbSet<Portfolio_ProjectTypeMapping> Portfolio_ProjectTypeMappings { get; set; } // ProjectTypeMapping
        System.Data.Entity.DbSet<Portfolio_TechSkill> Portfolio_TechSkills { get; set; } // TechSkill
        System.Data.Entity.DbSet<SiteLink> SiteLinks { get; set; } // SiteLink
        System.Data.Entity.DbSet<User> Users { get; set; } // User

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class dbContext : System.Data.Entity.DbContext, IdbContext
    {
        public System.Data.Entity.DbSet<ApplicationMaster> ApplicationMasters { get; set; } // ApplicationMaster
        public System.Data.Entity.DbSet<Portfolio_HighlightedSkill> Portfolio_HighlightedSkills { get; set; } // HighlightedSkill
        public System.Data.Entity.DbSet<Portfolio_LanguageSkill> Portfolio_LanguageSkills { get; set; } // LanguageSkill
        public System.Data.Entity.DbSet<Portfolio_PersonalDescription> Portfolio_PersonalDescriptions { get; set; } // PersonalDescription
        public System.Data.Entity.DbSet<Portfolio_Profile> Portfolio_Profiles { get; set; } // Profile
        public System.Data.Entity.DbSet<Portfolio_Project> Portfolio_Projects { get; set; } // Project
        public System.Data.Entity.DbSet<Portfolio_ProjectType> Portfolio_ProjectTypes { get; set; } // ProjectType
        public System.Data.Entity.DbSet<Portfolio_ProjectTypeMapping> Portfolio_ProjectTypeMappings { get; set; } // ProjectTypeMapping
        public System.Data.Entity.DbSet<Portfolio_TechSkill> Portfolio_TechSkills { get; set; } // TechSkill
        public System.Data.Entity.DbSet<SiteLink> SiteLinks { get; set; } // SiteLink
        public System.Data.Entity.DbSet<User> Users { get; set; } // User

        static dbContext()
        {
            System.Data.Entity.Database.SetInitializer<dbContext>(null);
        }

        public dbContext()
            : base("Name=MainDbConnection")
        {
            InitializePartial();
        }

        public dbContext(string connectionString)
            : base(connectionString)
        {
            InitializePartial();
        }

        public dbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
            InitializePartial();
        }

        public dbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
            InitializePartial();
        }

        public dbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
            InitializePartial();
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new ApplicationMasterConfiguration());
            modelBuilder.Configurations.Add(new Portfolio_HighlightedSkillConfiguration());
            modelBuilder.Configurations.Add(new Portfolio_LanguageSkillConfiguration());
            modelBuilder.Configurations.Add(new Portfolio_PersonalDescriptionConfiguration());
            modelBuilder.Configurations.Add(new Portfolio_ProfileConfiguration());
            modelBuilder.Configurations.Add(new Portfolio_ProjectConfiguration());
            modelBuilder.Configurations.Add(new Portfolio_ProjectTypeConfiguration());
            modelBuilder.Configurations.Add(new Portfolio_ProjectTypeMappingConfiguration());
            modelBuilder.Configurations.Add(new Portfolio_TechSkillConfiguration());
            modelBuilder.Configurations.Add(new SiteLinkConfiguration());
            modelBuilder.Configurations.Add(new UserConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new ApplicationMasterConfiguration(schema));
            modelBuilder.Configurations.Add(new Portfolio_HighlightedSkillConfiguration(schema));
            modelBuilder.Configurations.Add(new Portfolio_LanguageSkillConfiguration(schema));
            modelBuilder.Configurations.Add(new Portfolio_PersonalDescriptionConfiguration(schema));
            modelBuilder.Configurations.Add(new Portfolio_ProfileConfiguration(schema));
            modelBuilder.Configurations.Add(new Portfolio_ProjectConfiguration(schema));
            modelBuilder.Configurations.Add(new Portfolio_ProjectTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new Portfolio_ProjectTypeMappingConfiguration(schema));
            modelBuilder.Configurations.Add(new Portfolio_TechSkillConfiguration(schema));
            modelBuilder.Configurations.Add(new SiteLinkConfiguration(schema));
            modelBuilder.Configurations.Add(new UserConfiguration(schema));
            return modelBuilder;
        }

        partial void InitializePartial();
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
    }
    #endregion

    #region Database context factory

    public class dbContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<dbContext>
    {
        public dbContext Create()
        {
            return new dbContext();
        }
    }

    #endregion

    #region Fake Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class FakedbContext : IdbContext
    {
        public System.Data.Entity.DbSet<ApplicationMaster> ApplicationMasters { get; set; }
        public System.Data.Entity.DbSet<Portfolio_HighlightedSkill> Portfolio_HighlightedSkills { get; set; }
        public System.Data.Entity.DbSet<Portfolio_LanguageSkill> Portfolio_LanguageSkills { get; set; }
        public System.Data.Entity.DbSet<Portfolio_PersonalDescription> Portfolio_PersonalDescriptions { get; set; }
        public System.Data.Entity.DbSet<Portfolio_Profile> Portfolio_Profiles { get; set; }
        public System.Data.Entity.DbSet<Portfolio_Project> Portfolio_Projects { get; set; }
        public System.Data.Entity.DbSet<Portfolio_ProjectType> Portfolio_ProjectTypes { get; set; }
        public System.Data.Entity.DbSet<Portfolio_ProjectTypeMapping> Portfolio_ProjectTypeMappings { get; set; }
        public System.Data.Entity.DbSet<Portfolio_TechSkill> Portfolio_TechSkills { get; set; }
        public System.Data.Entity.DbSet<SiteLink> SiteLinks { get; set; }
        public System.Data.Entity.DbSet<User> Users { get; set; }

        public FakedbContext()
        {
            ApplicationMasters = new FakeDbSet<ApplicationMaster>("Id");
            Portfolio_HighlightedSkills = new FakeDbSet<Portfolio_HighlightedSkill>("Id");
            Portfolio_LanguageSkills = new FakeDbSet<Portfolio_LanguageSkill>("Id");
            Portfolio_PersonalDescriptions = new FakeDbSet<Portfolio_PersonalDescription>("Id");
            Portfolio_Profiles = new FakeDbSet<Portfolio_Profile>("Id");
            Portfolio_Projects = new FakeDbSet<Portfolio_Project>("Id");
            Portfolio_ProjectTypes = new FakeDbSet<Portfolio_ProjectType>("Id");
            Portfolio_ProjectTypeMappings = new FakeDbSet<Portfolio_ProjectTypeMapping>("Id");
            Portfolio_TechSkills = new FakeDbSet<Portfolio_TechSkill>("Id");
            SiteLinks = new FakeDbSet<SiteLink>("Id");
            Users = new FakeDbSet<User>("Id");

            InitializePartial();
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        partial void InitializePartial();

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }

    }

    // ************************************************************************
    // Fake DbSet
    // Implementing Find:
    //      The Find method is difficult to implement in a generic fashion. If
    //      you need to test code that makes use of the Find method it is
    //      easiest to create a test DbSet for each of the entity types that
    //      need to support find. You can then write logic to find that
    //      particular type of entity, as shown below:
    //      public class FakeBlogDbSet : FakeDbSet<Blog>
    //      {
    //          public override Blog Find(params object[] keyValues)
    //          {
    //              var id = (int) keyValues.Single();
    //              return this.SingleOrDefault(b => b.BlogId == id);
    //          }
    //      }
    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class FakeDbSet<TEntity> : System.Data.Entity.DbSet<TEntity>, IQueryable, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity> where TEntity : class
    {
        private readonly System.Reflection.PropertyInfo[] _primaryKeys;
        private readonly System.Collections.ObjectModel.ObservableCollection<TEntity> _data;
        private readonly IQueryable _query;

        public FakeDbSet()
        {
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();

            InitializePartial();
        }

        public FakeDbSet(params string[] primaryKeys)
        {
            _primaryKeys = typeof(TEntity).GetProperties().Where(x => primaryKeys.Contains(x.Name)).ToArray();
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();

            InitializePartial();
        }

        public override TEntity Find(params object[] keyValues)
        {
            if (_primaryKeys == null)
                throw new System.ArgumentException("No primary keys defined");
            if (keyValues.Length != _primaryKeys.Length)
                throw new System.ArgumentException("Incorrect number of keys passed to Find method");

            var keyQuery = this.AsQueryable();
            keyQuery = keyValues
                .Select((t, i) => i)
                .Aggregate(keyQuery,
                    (current, x) =>
                        current.Where(entity => _primaryKeys[x].GetValue(entity, null).Equals(keyValues[x])));

            return keyQuery.SingleOrDefault();
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(System.Threading.CancellationToken cancellationToken, params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues), cancellationToken);
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues));
        }

        public override System.Collections.Generic.IEnumerable<TEntity> AddRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Add(entity);
            }
            return items;
        }

        public override TEntity Add(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override System.Collections.Generic.IEnumerable<TEntity> RemoveRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Remove(entity);
            }
            return items;
        }

        public override TEntity Remove(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Remove(item);
            return item;
        }

        public override TEntity Attach(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override TEntity Create()
        {
            return System.Activator.CreateInstance<TEntity>();
        }

        public override TDerivedEntity Create<TDerivedEntity>()
        {
            return System.Activator.CreateInstance<TDerivedEntity>();
        }

        public override System.Collections.ObjectModel.ObservableCollection<TEntity> Local
        {
            get { return _data; }
        }

        System.Type IQueryable.ElementType
        {
            get { return _query.ElementType; }
        }

        System.Linq.Expressions.Expression IQueryable.Expression
        {
            get { return _query.Expression; }
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<TEntity>(_query.Provider); }
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Collections.Generic.IEnumerator<TEntity> System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator<TEntity> System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity>.GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<TEntity>(_data.GetEnumerator());
        }

        partial void InitializePartial();
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class FakeDbAsyncQueryProvider<TEntity> : System.Data.Entity.Infrastructure.IDbAsyncQueryProvider
    {
        private readonly IQueryProvider _inner;

        public FakeDbAsyncQueryProvider(IQueryProvider inner)
        {
            _inner = inner;
        }

        public IQueryable CreateQuery(System.Linq.Expressions.Expression expression)
        {
            return new FakeDbAsyncEnumerable<TEntity>(expression);
        }

        public IQueryable<TElement> CreateQuery<TElement>(System.Linq.Expressions.Expression expression)
        {
            return new FakeDbAsyncEnumerable<TElement>(expression);
        }

        public object Execute(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute(expression);
        }

        public TResult Execute<TResult>(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute<TResult>(expression);
        }

        public System.Threading.Tasks.Task<object> ExecuteAsync(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute(expression));
        }

        public System.Threading.Tasks.Task<TResult> ExecuteAsync<TResult>(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute<TResult>(expression));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class FakeDbAsyncEnumerable<T> : EnumerableQuery<T>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<T>, IQueryable<T>
    {
        public FakeDbAsyncEnumerable(System.Collections.Generic.IEnumerable<T> enumerable)
            : base(enumerable)
        { }

        public FakeDbAsyncEnumerable(System.Linq.Expressions.Expression expression)
            : base(expression)
        { }

        public System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T> GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator());
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator System.Data.Entity.Infrastructure.IDbAsyncEnumerable.GetAsyncEnumerator()
        {
            return GetAsyncEnumerator();
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<T>(this); }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class FakeDbAsyncEnumerator<T> : System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T>
    {
        private readonly System.Collections.Generic.IEnumerator<T> _inner;

        public FakeDbAsyncEnumerator(System.Collections.Generic.IEnumerator<T> inner)
        {
            _inner = inner;
        }

        public void Dispose()
        {
            _inner.Dispose();
        }

        public System.Threading.Tasks.Task<bool> MoveNextAsync(System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(_inner.MoveNext());
        }

        public T Current
        {
            get { return _inner.Current; }
        }

        object System.Data.Entity.Infrastructure.IDbAsyncEnumerator.Current
        {
            get { return Current; }
        }
    }

    #endregion

    #region POCO classes

    // ApplicationMaster
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class ApplicationMaster
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child SiteLinks where [SiteLink].[ApplicationID] point to this entity (SiteLinks_ApplicationID_Applications_ID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SiteLink> SiteLinks { get; set; } // SiteLink.SiteLinks_ApplicationID_Applications_ID

        public ApplicationMaster()
        {
            SiteLinks = new System.Collections.Generic.List<SiteLink>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // HighlightedSkill
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_HighlightedSkill
    {
        public int Id { get; set; } // ID (Primary key)
        public string Description { get; set; } // Description (length: 500)
        public string DisplayName { get; set; } // DisplayName (length: 100)
        public int? ProficiencyPercentage { get; set; } // ProficiencyPercentage
        public string DisplayIcon { get; set; } // DisplayIcon (length: 100)

        public Portfolio_HighlightedSkill()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // LanguageSkill
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_LanguageSkill
    {
        public int Id { get; set; } // ID (Primary key)
        public string Description { get; set; } // Description (length: 500)
        public string DisplayName { get; set; } // DisplayName (length: 100)
        public int? ProficiencyPercentage { get; set; } // ProficiencyPercentage
        public string DisplayIcon { get; set; } // DisplayIcon (length: 100)

        public Portfolio_LanguageSkill()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // PersonalDescription
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_PersonalDescription
    {
        public int Id { get; set; } // ID (Primary key)
        public string Adjective1 { get; set; } // Adjective1 (length: 100)
        public string Adjective2 { get; set; } // Adjective2 (length: 100)
        public string Adjective3 { get; set; } // Adjective3 (length: 100)
        public string Blurb { get; set; } // Blurb

        public Portfolio_PersonalDescription()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Profile
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_Profile
    {
        public int Id { get; set; } // ID (Primary key)
        public string FirstName { get; set; } // FirstName (length: 100)
        public string LastName { get; set; } // LastName (length: 100)
        public System.DateTime DateOfBirth { get; set; } // DateOfBirth
        public string Address { get; set; } // Address (length: 100)
        public string PhoneNumber { get; set; } // PhoneNumber (length: 25)
        public string EmailAddress { get; set; } // EmailAddress (length: 200)
        public string PositionTitle { get; set; } // PositionTitle (length: 100)
        public string PersonalDescription { get; set; } // PersonalDescription (length: 500)
        public string WebsiteText { get; set; } // WebsiteText (length: 100)
        public string WebsiteUrl { get; set; } // WebsiteURL (length: 200)

        public Portfolio_Profile()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Project
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_Project
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 100)
        public string Description { get; set; } // Description (length: 500)
        public byte[] Image { get; set; } // Image

        // Reverse navigation

        /// <summary>
        /// Child Portfolio_ProjectTypeMappings where [ProjectTypeMapping].[ProjectID] point to this entity (ProjectTypeMapping_ProjectID_Project_ID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Portfolio_ProjectTypeMapping> Portfolio_ProjectTypeMappings { get; set; } // ProjectTypeMapping.ProjectTypeMapping_ProjectID_Project_ID

        public Portfolio_Project()
        {
            Portfolio_ProjectTypeMappings = new System.Collections.Generic.List<Portfolio_ProjectTypeMapping>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ProjectType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_ProjectType
    {
        public int Id { get; set; } // ID (Primary key)
        public string Type { get; set; } // Type (length: 100)

        // Reverse navigation

        /// <summary>
        /// Child Portfolio_ProjectTypeMappings where [ProjectTypeMapping].[ProjectTypeID] point to this entity (ProjectTypeMapping_ProjectTypeID_ProjectType_ID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Portfolio_ProjectTypeMapping> Portfolio_ProjectTypeMappings { get; set; } // ProjectTypeMapping.ProjectTypeMapping_ProjectTypeID_ProjectType_ID

        public Portfolio_ProjectType()
        {
            Portfolio_ProjectTypeMappings = new System.Collections.Generic.List<Portfolio_ProjectTypeMapping>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ProjectTypeMapping
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_ProjectTypeMapping
    {
        public int Id { get; set; } // ID (Primary key)
        public int ProjectId { get; set; } // ProjectID
        public int ProjectTypeId { get; set; } // ProjectTypeID

        // Foreign keys

        /// <summary>
        /// Parent Portfolio_Project pointed by [ProjectTypeMapping].([ProjectId]) (ProjectTypeMapping_ProjectID_Project_ID)
        /// </summary>
        public virtual Portfolio_Project Portfolio_Project { get; set; } // ProjectTypeMapping_ProjectID_Project_ID

        /// <summary>
        /// Parent Portfolio_ProjectType pointed by [ProjectTypeMapping].([ProjectTypeId]) (ProjectTypeMapping_ProjectTypeID_ProjectType_ID)
        /// </summary>
        public virtual Portfolio_ProjectType Portfolio_ProjectType { get; set; } // ProjectTypeMapping_ProjectTypeID_ProjectType_ID

        public Portfolio_ProjectTypeMapping()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // TechSkill
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_TechSkill
    {
        public int Id { get; set; } // ID (Primary key)
        public string Description { get; set; } // Description (length: 500)
        public string DisplayName { get; set; } // DisplayName (length: 100)
        public int? ProficiencyPercentage { get; set; } // ProficiencyPercentage
        public string DisplayIcon { get; set; } // DisplayIcon (length: 100)

        public Portfolio_TechSkill()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // SiteLink
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class SiteLink
    {
        public int Id { get; set; } // ID (Primary key)
        public string DisplayName { get; set; } // DisplayName (length: 50)
        public string Description { get; set; } // Description (length: 500)
        public string Directive { get; set; } // Directive (length: 100)
        public string Url { get; set; } // URL (length: 500)
        public string Action { get; set; } // Action (length: 500)
        public string Controller { get; set; } // Controller (length: 500)
        public string DisplayIcon { get; set; } // DisplayIcon (length: 500)
        public bool IsDefault { get; set; } // IsDefault
        public bool IsEnabled { get; set; } // IsEnabled
        public int ApplicationId { get; set; } // ApplicationID
        public int? Order { get; set; } // Order

        // Foreign keys

        /// <summary>
        /// Parent ApplicationMaster pointed by [SiteLink].([ApplicationId]) (SiteLinks_ApplicationID_Applications_ID)
        /// </summary>
        public virtual ApplicationMaster ApplicationMaster { get; set; } // SiteLinks_ApplicationID_Applications_ID

        public SiteLink()
        {
            IsDefault = false;
            IsEnabled = true;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // User
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class User
    {
        public int Id { get; set; } // ID (Primary key)
        public string ClientName { get; set; } // ClientName (length: 500)
        public bool IsActive { get; set; } // IsActive
        public string EmailAddress { get; set; } // EmailAddress (length: 250)
        public bool IsAdmin { get; set; } // IsAdmin

        public User()
        {
            IsActive = true;
            IsAdmin = false;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    #endregion

    #region POCO Configuration

    // ApplicationMaster
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class ApplicationMasterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ApplicationMaster>
    {
        public ApplicationMasterConfiguration()
            : this("dbo")
        {
        }

        public ApplicationMasterConfiguration(string schema)
        {
            ToTable("ApplicationMaster", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // HighlightedSkill
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_HighlightedSkillConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Portfolio_HighlightedSkill>
    {
        public Portfolio_HighlightedSkillConfiguration()
            : this("Portfolio")
        {
        }

        public Portfolio_HighlightedSkillConfiguration(string schema)
        {
            ToTable("HighlightedSkill", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar").IsRequired().HasMaxLength(500);
            Property(x => x.DisplayName).HasColumnName(@"DisplayName").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.ProficiencyPercentage).HasColumnName(@"ProficiencyPercentage").HasColumnType("int").IsOptional();
            Property(x => x.DisplayIcon).HasColumnName(@"DisplayIcon").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // LanguageSkill
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_LanguageSkillConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Portfolio_LanguageSkill>
    {
        public Portfolio_LanguageSkillConfiguration()
            : this("Portfolio")
        {
        }

        public Portfolio_LanguageSkillConfiguration(string schema)
        {
            ToTable("LanguageSkill", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar").IsRequired().HasMaxLength(500);
            Property(x => x.DisplayName).HasColumnName(@"DisplayName").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.ProficiencyPercentage).HasColumnName(@"ProficiencyPercentage").HasColumnType("int").IsOptional();
            Property(x => x.DisplayIcon).HasColumnName(@"DisplayIcon").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // PersonalDescription
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_PersonalDescriptionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Portfolio_PersonalDescription>
    {
        public Portfolio_PersonalDescriptionConfiguration()
            : this("Portfolio")
        {
        }

        public Portfolio_PersonalDescriptionConfiguration(string schema)
        {
            ToTable("PersonalDescription", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Adjective1).HasColumnName(@"Adjective1").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.Adjective2).HasColumnName(@"Adjective2").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.Adjective3).HasColumnName(@"Adjective3").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.Blurb).HasColumnName(@"Blurb").HasColumnType("nvarchar(max)").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Profile
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_ProfileConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Portfolio_Profile>
    {
        public Portfolio_ProfileConfiguration()
            : this("Portfolio")
        {
        }

        public Portfolio_ProfileConfiguration(string schema)
        {
            ToTable("Profile", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.DateOfBirth).HasColumnName(@"DateOfBirth").HasColumnType("datetime").IsRequired();
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.PhoneNumber).HasColumnName(@"PhoneNumber").HasColumnType("nvarchar").IsRequired().HasMaxLength(25);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("nvarchar").IsRequired().HasMaxLength(200);
            Property(x => x.PositionTitle).HasColumnName(@"PositionTitle").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.PersonalDescription).HasColumnName(@"PersonalDescription").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.WebsiteText).HasColumnName(@"WebsiteText").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.WebsiteUrl).HasColumnName(@"WebsiteURL").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Project
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_ProjectConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Portfolio_Project>
    {
        public Portfolio_ProjectConfiguration()
            : this("Portfolio")
        {
        }

        public Portfolio_ProjectConfiguration(string schema)
        {
            ToTable("Project", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.Image).HasColumnName(@"Image").HasColumnType("varbinary(max)").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ProjectType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_ProjectTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Portfolio_ProjectType>
    {
        public Portfolio_ProjectTypeConfiguration()
            : this("Portfolio")
        {
        }

        public Portfolio_ProjectTypeConfiguration(string schema)
        {
            ToTable("ProjectType", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ProjectTypeMapping
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_ProjectTypeMappingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Portfolio_ProjectTypeMapping>
    {
        public Portfolio_ProjectTypeMappingConfiguration()
            : this("Portfolio")
        {
        }

        public Portfolio_ProjectTypeMappingConfiguration(string schema)
        {
            ToTable("ProjectTypeMapping", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ProjectId).HasColumnName(@"ProjectID").HasColumnType("int").IsRequired();
            Property(x => x.ProjectTypeId).HasColumnName(@"ProjectTypeID").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Portfolio_Project).WithMany(b => b.Portfolio_ProjectTypeMappings).HasForeignKey(c => c.ProjectId).WillCascadeOnDelete(false); // ProjectTypeMapping_ProjectID_Project_ID
            HasRequired(a => a.Portfolio_ProjectType).WithMany(b => b.Portfolio_ProjectTypeMappings).HasForeignKey(c => c.ProjectTypeId).WillCascadeOnDelete(false); // ProjectTypeMapping_ProjectTypeID_ProjectType_ID
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // TechSkill
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Portfolio_TechSkillConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Portfolio_TechSkill>
    {
        public Portfolio_TechSkillConfiguration()
            : this("Portfolio")
        {
        }

        public Portfolio_TechSkillConfiguration(string schema)
        {
            ToTable("TechSkill", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar").IsRequired().HasMaxLength(500);
            Property(x => x.DisplayName).HasColumnName(@"DisplayName").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.ProficiencyPercentage).HasColumnName(@"ProficiencyPercentage").HasColumnType("int").IsOptional();
            Property(x => x.DisplayIcon).HasColumnName(@"DisplayIcon").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SiteLink
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class SiteLinkConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SiteLink>
    {
        public SiteLinkConfiguration()
            : this("dbo")
        {
        }

        public SiteLinkConfiguration(string schema)
        {
            ToTable("SiteLink", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DisplayName).HasColumnName(@"DisplayName").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.Directive).HasColumnName(@"Directive").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.Url).HasColumnName(@"URL").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.Action).HasColumnName(@"Action").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.Controller).HasColumnName(@"Controller").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.DisplayIcon).HasColumnName(@"DisplayIcon").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.IsDefault).HasColumnName(@"IsDefault").HasColumnType("bit").IsRequired();
            Property(x => x.IsEnabled).HasColumnName(@"IsEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.ApplicationId).HasColumnName(@"ApplicationID").HasColumnType("int").IsRequired();
            Property(x => x.Order).HasColumnName(@"Order").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.ApplicationMaster).WithMany(b => b.SiteLinks).HasForeignKey(c => c.ApplicationId).WillCascadeOnDelete(false); // SiteLinks_ApplicationID_Applications_ID
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // User
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class UserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<User>
    {
        public UserConfiguration()
            : this("dbo")
        {
        }

        public UserConfiguration(string schema)
        {
            ToTable("User", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClientName).HasColumnName(@"ClientName").HasColumnType("nvarchar").IsRequired().HasMaxLength(500);
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("nvarchar").IsOptional().HasMaxLength(250);
            Property(x => x.IsAdmin).HasColumnName(@"IsAdmin").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    #endregion

}
// </auto-generated>

